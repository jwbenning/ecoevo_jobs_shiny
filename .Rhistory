`First Author Publication Rate` = `First Author Pubs` / `Years Since PhD`,
`Current Position` = fct_relevel(`Current Position`, "Grad Student", "Postdoc", "Non TT faculty", "Asst Prof", "Other"),
`Total Funding` = fct_relevel(as.factor(`Total Funding`), "$1-50,000", "$50,000-100,000", "$100,000-250,000", "$250,000-500,000", "$500,000-$1M", "$1-2M", "$2M+"))
View(sheet_data)
runApp()
deployApp()
library(googlesheets4)
library(tidyverse)
csv_export_url <- "https://docs.google.com/spreadsheets/d/1Wmz6N01mSrpcTfIoMH0Rg42xL64SRKYKzIrAZmDGQ7U/gviz/tq?tqx=out:csv&sheet=Clean"
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
#  slice(-2) %>%
# rename(
#   `Current Position` = `Current Position`,
#   `First author pubs` = `1st Author Pubs Qualifications`,
#   `Senior author pubs` = `Senior Author Pubs`,
#   `Other pubs` = `Other Pubs (as of 2/1/2023)`,
#   `Applications` = `Applications Outcomes 2022-2023`
# ) %>%
# filter(
#   grepl("^\\d+$", `First author pubs`),
#   grepl("^\\d+$", `Senior author pubs`),
#   grepl("^\\d+$", `Other pubs`),
#   grepl("^\\d+$", `Applications`),
#   grepl("^\\d+$", `Offers`),
#   grepl("^\\d+$", `Instructor of Record`),
#   grepl("^\\d+$", `1st / Phone Interviews`)
# ) %>%
mutate(
Gender = ifelse(Gender %in% c("Male", "Female"), Gender, "Other"),
`Current Position` = ifelse(`Current Position` %in% c("Postdoc", "Grad Student", "Non TT faculty", "Asst Prof"), `Current Position`, "Other"),
`Years Since PhD` = ifelse(`Job Cycle` == "2022/2023", 2023 - as.numeric(`PhD Year`), 2022 - as.numeric(`PhD Year`)),
`Classes Taught` = as.numeric(`Instructor of Record`),
#`First author pubs` = as.numeric(`First author pubs`),
#`Senior author pubs` = as.numeric(`Senior author pubs`),
#`Other pubs` = as.numeric(`Other pubs`),
#Applications = as.numeric(Applications),
#`Phone interviews` = as.numeric(`1st / Phone Interviews`),
#Offers = as.numeric(Offers),
`Total Publications` = `First Author Pubs` + `Senior Author Pubs` + `Other Pubs`
) %>%
mutate(`Phone Interview Rate` = `Phone Interviews` / Applications,
`Campus Interview Rate` = `Campus Interviews` / Applications,
`Offer Rate` = Offers / Applications,
`Overall Publication Rate` = `Total Publications` / `Years Since PhD`,
`First Author Publication Rate` = `First Author Pubs` / `Years Since PhD`,
`Current Position` = fct_relevel(`Current Position`, "Grad Student", "Postdoc", "Non TT faculty", "Asst Prof", "Other"),
`Total Funding` = fct_relevel(as.factor(`Total Funding`), "$1-50,000", "$50,000-100,000", "$100,000-250,000", "$250,000-500,000", "$500,000-$1M", "$1-2M", "$2M+"))
install.packages("caret")
library(caret)
install.packages("caTools")
library(caTools)
# Train Test Split on both Iris and Mtcars
train_test_split <- function(df) {
set.seed(42)
sample = sample.split(df, SplitRatio = 0.8)
train = subset(df, sample == TRUE)
test  = subset(df, sample == FALSE)
return (list(train, test))
}
# Unwrapping mtcars
jobs_train <- train_test_split(sheet_data)[[1]]
library(tidyverse)
?slice
jobs_train <- sheet_data %>%
slice_sample(n = 150)
?anti_join
jobs_test <- sheet_data %>%
anti_join(jobs_train)
View(sheet_data)
lm_model <- train(`Offer Rate` ~ `Years Since PhD` + `Gender` + `First Author Pubs` + `Total Publications` + `Total Funding` + `Classes Taught`, data = jobs_train, method = "lm")
?train
lm_model <- train(`Offer Rate` ~ `Years Since PhD` + `Gender` + `First Author Pubs` + `Total Publications` + `Total Funding` + `Classes Taught`,
data = jobs_train,
method = "lm",
na.action = "omit")
lm_model <- train(`Offer Rate` ~ `Years Since PhD` + `Gender` + `First Author Pubs` + `Total Publications` + `Total Funding` + `Classes Taught`,
data = jobs_train,
method = "lm",
na.action = "na.omit")
summary(lm_model)
tree_model <- train(`Offer Rate` ~ `Years Since PhD` + `Gender` + `First Author Pubs` + `Total Publications` + `Total Funding` + `Classes Taught`,
data = jobs_train,
method = "rpart",
na.action = "na.omit")
tree_model <- train(`Offer Rate` ~ `Years Since PhD` + `Gender` + `First Author Pubs` + `Classes Taught`,
data = jobs_train,
method = "rpart",
na.action = "na.omit")
lm_model <- train(`Offer Rate` ~ `Gender` + `First Author Pubs` + `Total Publications` + `Total Funding` + `Classes Taught`,
data = jobs_train,
method = "lm",
na.action = "na.omit")
summary(lm_model)
lm_model <- train(`Offer Rate` ~ `Gender` + `First Author Pubs` + `Total Publications` + `Total Funding` + `Classes Taught`,
data = sheet_data,
method = "lm",
na.action = "na.omit")
summary(lm_model)
lm_model <- train(`Offer Rate` ~ `Gender` + `Total Publications`,
data = sheet_data,
method = "lm",
na.action = "na.omit")
summary(lm_model)
library(rsconnect)
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(ggExtra)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#library(caret)
#library(caTools)
library(tidyverse)
library(brms)
#library(brmstools)
library(bayesplot)
csv_export_url <- "https://docs.google.com/spreadsheets/d/1Wmz6N01mSrpcTfIoMH0Rg42xL64SRKYKzIrAZmDGQ7U/gviz/tq?tqx=out:csv&sheet=Clean"
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
#  slice(-2) %>%
# rename(
#   `Current Position` = `Current Position`,
#   `First author pubs` = `1st Author Pubs Qualifications`,
#   `Senior author pubs` = `Senior Author Pubs`,
#   `Other pubs` = `Other Pubs (as of 2/1/2023)`,
#   `Applications` = `Applications Outcomes 2022-2023`
# ) %>%
# filter(
#   grepl("^\\d+$", `First author pubs`),
#   grepl("^\\d+$", `Senior author pubs`),
#   grepl("^\\d+$", `Other pubs`),
#   grepl("^\\d+$", `Applications`),
#   grepl("^\\d+$", `Offers`),
#   grepl("^\\d+$", `Instructor of Record`),
#   grepl("^\\d+$", `1st / Phone Interviews`)
# ) %>%
mutate(
Gender = ifelse(Gender %in% c("Male", "Female"), Gender, "Other"),
`Current Position` = ifelse(`Current Position` %in% c("Postdoc", "Grad Student", "Non TT faculty", "Asst Prof"), `Current Position`, "Other"),
`Years Since PhD` = ifelse(`Job Cycle` == "2022/2023", 2023 - as.numeric(`PhD Year`), 2022 - as.numeric(`PhD Year`)),
`Classes Taught` = as.numeric(`Instructor of Record`),
#`First author pubs` = as.numeric(`First author pubs`),
#`Senior author pubs` = as.numeric(`Senior author pubs`),
#`Other pubs` = as.numeric(`Other pubs`),
#Applications = as.numeric(Applications),
#`Phone interviews` = as.numeric(`1st / Phone Interviews`),
#Offers = as.numeric(Offers),
`Total Publications` = `First Author Pubs` + `Senior Author Pubs` + `Other Pubs`
) %>%
mutate(`Phone Interview Rate` = `Phone Interviews` / Applications,
`Campus Interview Rate` = `Campus Interviews` / Applications,
`Offer Rate` = Offers / Applications,
`Overall Publication Rate` = `Total Publications` / `Years Since PhD`,
`First Author Publication Rate` = `First Author Pubs` / `Years Since PhD`,
`Current Position` = fct_relevel(`Current Position`, "Grad Student", "Postdoc", "Non TT faculty", "Asst Prof", "Other"),
`Total Funding` = fct_relevel(as.factor(`Total Funding`), "$1-50,000", "$50,000-100,000", "$100,000-250,000", "$250,000-500,000", "$500,000-$1M", "$1-2M", "$2M+"))
vars <- c("Current Position",
"Years Since PhD",
"Gender",
"First Author Pubs",
"Total Publications",
"Fellowships",
"Major Grants",
"Classes Taught",
"Applications",
"Offers")
lasso_df <- sheet_data %>%
filter(!if_any(all_of(vars), is.na)) %>%
mutate(reject = Applications - Offers,
gender_bi = ifelse(Gender == "Male", 0, 1)) %>%
rename_all(~str_replace_all(., " ", ""))
skeptical_prior <- set_prior("normal(0, 0.5)", class = "b")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = skeptical_prior,
chains = 4,
iter = 2000,
cores = 4
)
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = skeptical_prior,
chains = 4,
iter = 2000,
cores = 1
)
remove.packages(c("rstan","StanHeaders"))
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
#library(caret)
#library(caTools)
library(tidyverse)
library(brms)
#library(brmstools)
library(bayesplot)
vars <- c("Current Position",
"Years Since PhD",
"Gender",
"First Author Pubs",
"Total Publications",
"Fellowships",
"Major Grants",
"Classes Taught",
"Applications",
"Offers")
lasso_df <- sheet_data %>%
filter(!if_any(all_of(vars), is.na)) %>%
mutate(reject = Applications - Offers,
gender_bi = ifelse(Gender == "Male", 0, 1)) %>%
rename_all(~str_replace_all(., " ", ""))
csv_export_url <- "https://docs.google.com/spreadsheets/d/1Wmz6N01mSrpcTfIoMH0Rg42xL64SRKYKzIrAZmDGQ7U/gviz/tq?tqx=out:csv&sheet=Clean"
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
#  slice(-2) %>%
# rename(
#   `Current Position` = `Current Position`,
#   `First author pubs` = `1st Author Pubs Qualifications`,
#   `Senior author pubs` = `Senior Author Pubs`,
#   `Other pubs` = `Other Pubs (as of 2/1/2023)`,
#   `Applications` = `Applications Outcomes 2022-2023`
# ) %>%
# filter(
#   grepl("^\\d+$", `First author pubs`),
#   grepl("^\\d+$", `Senior author pubs`),
#   grepl("^\\d+$", `Other pubs`),
#   grepl("^\\d+$", `Applications`),
#   grepl("^\\d+$", `Offers`),
#   grepl("^\\d+$", `Instructor of Record`),
#   grepl("^\\d+$", `1st / Phone Interviews`)
# ) %>%
mutate(
Gender = ifelse(Gender %in% c("Male", "Female"), Gender, "Other"),
`Current Position` = ifelse(`Current Position` %in% c("Postdoc", "Grad Student", "Non TT faculty", "Asst Prof"), `Current Position`, "Other"),
`Years Since PhD` = ifelse(`Job Cycle` == "2022/2023", 2023 - as.numeric(`PhD Year`), 2022 - as.numeric(`PhD Year`)),
`Classes Taught` = as.numeric(`Instructor of Record`),
#`First author pubs` = as.numeric(`First author pubs`),
#`Senior author pubs` = as.numeric(`Senior author pubs`),
#`Other pubs` = as.numeric(`Other pubs`),
#Applications = as.numeric(Applications),
#`Phone interviews` = as.numeric(`1st / Phone Interviews`),
#Offers = as.numeric(Offers),
`Total Publications` = `First Author Pubs` + `Senior Author Pubs` + `Other Pubs`
) %>%
mutate(`Phone Interview Rate` = `Phone Interviews` / Applications,
`Campus Interview Rate` = `Campus Interviews` / Applications,
`Offer Rate` = Offers / Applications,
`Overall Publication Rate` = `Total Publications` / `Years Since PhD`,
`First Author Publication Rate` = `First Author Pubs` / `Years Since PhD`,
`Current Position` = fct_relevel(`Current Position`, "Grad Student", "Postdoc", "Non TT faculty", "Asst Prof", "Other"),
`Total Funding` = fct_relevel(as.factor(`Total Funding`), "$1-50,000", "$50,000-100,000", "$100,000-250,000", "$250,000-500,000", "$500,000-$1M", "$1-2M", "$2M+"))
lasso_df <- sheet_data %>%
filter(!if_any(all_of(vars), is.na)) %>%
mutate(reject = Applications - Offers,
gender_bi = ifelse(Gender == "Male", 0, 1)) %>%
rename_all(~str_replace_all(., " ", ""))
skeptical_prior <- set_prior("normal(0, 0.5)", class = "b")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = skeptical_prior,
chains = 4,
iter = 2000,
cores = 1
)
summary(bayes_model)
posterior_samples <- as.matrix(bayes_model)
mcmc_areas(posterior_samples,
pars = c("b_YearsSincePhD"))
mcmc_areas(posterior_samples)
mcmc_areas(posterior_samples,
pars = c("b_YearsSincePhD"))
mcmc_intervals(bayes_model)
stanplot(bayes_model)
mcmc_plot(bayes_model)
?mcmc_plot
?mcmc_areas
mcmc_plot(bayes_model)
conditional_effects(bayes_model)
mcmc_plot(bayes_model)
?conditional_effects
conditional_effects(bayes_model, ask = F)
plot(conditional_effects(bayes_model,) ask = F)
plot(conditional_effects(bayes_model), ask = F)
summary(bayes_model)
mcmc_plot(bayes_model)
mcmc_areas(bayes_model)
mcmc_plot(bayes_model)
horshoe_prior <- set_prior("horseshoe(1)")
horseshoe_prior <- set_prior("horseshoe(1)")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = horseshoe_prior,
chains = 4,
iter = 2000,
cores = 4
)
mcmc_plot(bayes_model)
summary(bayes_model)
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD * CurrentPosition * Gender * FirstAuthorPubs * TotalPublications * Fellowships * MajorGrants * ClassesTaught,
data = lasso_df,
family = binomial(),
prior = horseshoe_prior,
df = 3,
chains = 4,
iter = 2000,
cores = 4
)
horseshoe_prior <- set_prior("horseshoe(df=2)")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD * CurrentPosition * Gender * FirstAuthorPubs * TotalPublications * Fellowships * MajorGrants * ClassesTaught,
data = lasso_df,
family = binomial(),
prior = horseshoe_prior,
chains = 4,
iter = 2000,
cores = 4
)
summary(bayes_model)
horseshoe_prior <- set_prior("horseshoe(df=1)")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD * CurrentPosition * Gender * FirstAuthorPubs * TotalPublications * Fellowships * MajorGrants * ClassesTaught,
data = lasso_df,
family = binomial(),
prior = horseshoe_prior,
chains = 4,
iter = 2000,
cores = 4
)
horseshoe_prior <- set_prior("horseshoe(df=1)")
bayes_model <- brm(
Offers | trials(Applications) ~ (YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught)^2,
data = lasso_df,
family = binomial(),
prior = horseshoe_prior,
chains = 4,
iter = 2000,
cores = 4
)
mcmc_plot(bayes_model)
summary(bayes_model)
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = horseshoe_prior,
chains = 4,
iter = 2000,
cores = 4
)
mcmc_plot(bayes_model)
horseshoe_prior <- set_prior("horseshoe(df=2)")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = horseshoe_prior,
chains = 4,
iter = 2000,
cores = 4
)
mcmc_plot(bayes_model)
summary(bayes_model)
skeptical_prior <- set_prior("normal(0, 0.5)", class = "b")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = skeptical_prior,
chains = 4,
iter = 2000,
cores = 4
)
summary(bayes_model)
mcmc_plot(bayes_model)
bayes_model <- brm(
Offers | trials(Applications) ~ (YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught)^2,
data = lasso_df,
family = binomial(),
prior = skeptical_prior,
chains = 4,
iter = 3000,
cores = 4
)
summary(bayes_model)
mcmc_plot(bayes_model)
skeptical_prior <- set_prior("normal(0, 0.2)", class = "b")
bayes_model <- brm(
Offers | trials(Applications) ~ YearsSincePhD + CurrentPosition + Gender + FirstAuthorPubs + TotalPublications + Fellowships + MajorGrants + ClassesTaught,
data = lasso_df,
family = binomial(),
prior = skeptical_prior,
chains = 4,
iter = 3000,
cores = 4
)
summary(bayes_model)
mcmc_plot(bayes_model)
?mcmc_plot
kk <- mcmc_plot(bayes_model)
View(kk)
mcmc_intervals(bayes_plot)
mcmc_intervals(bayes_model)
mcmc_plot(bayes_model, prob_outer = 0.95)
mcmc_plot(bayes_model, prob_outer = 0.5)
new_values_data <- data.frame(Applications = 50,
YearsSincePhD = 4,
CurrentPosition = "AsstProf",
Gender = "Male",
FirstAuthorPubs = 7,
TotalPublications = 10,
Fellowships = 1,
MajorGrants = 1,
ClassesTaught = 0)
predictions <- posterior_predict(bayes_model, newdata = new_values_data)
new_values_data <- data.frame(Applications = 50,
YearsSincePhD = 4,
CurrentPosition = "Asst Prof",
Gender = "Male",
FirstAuthorPubs = 7,
TotalPublications = 10,
Fellowships = 1,
MajorGrants = 1,
ClassesTaught = 0)
predictions <- posterior_predict(bayes_model, newdata = new_values_data)
mean(predictions[,1])
mean(predictions[,2])
predictions_prob <- fitted(bayes_model, newdata = new_values_data)
View(predictions_prob)
predictions_prob <- fitted(bayes_model, newdata = new_values_data)
View(predictions)
predictions_prob <- fitted(bayes_model, newdata = new_values_data)
fitted(bayes_model, newdata = new_values_data)
predictions_prob <- predict(bayes_model, newdata = new_values_data)
View(predictions_prob)
predictions_prob <- fitted(bayes_model, newdata = new_values_data, type = "response")
predictions_prob <- predict(bayes_model, newdata = new_values_data, type = "response")
predictions_prob <- fitted(bayes_model, newdata = new_values_data)
View(predictions_prob)
new_values_data <- data.frame(Applications = 100,
YearsSincePhD = 4,
CurrentPosition = "Asst Prof",
Gender = "Male",
FirstAuthorPubs = 7,
TotalPublications = 10,
Fellowships = 1,
MajorGrants = 1,
ClassesTaught = 0)
predictions <- posterior_predict(bayes_model, newdata = new_values_data)
mean(predictions[,1])
predictions_prob <- fitted(bayes_model, newdata = new_values_data)
predict(bayes_model, newdata = new_values_data, type = "response")
?predict.brmsfit
new_values_data <- data.frame(Applications = 100,
YearsSincePhD = 4,
CurrentPosition = "Asst Prof",
Gender = "Female",
FirstAuthorPubs = 7,
TotalPublications = 10,
Fellowships = 1,
MajorGrants = 1,
ClassesTaught = 0)
predictions_prob <- fitted(bayes_model, newdata = new_values_data)
new_values_data <- data.frame(Applications = 15,
YearsSincePhD = 5,
CurrentPosition = "Postdoc",
Gender = "Male",
FirstAuthorPubs = 7,
TotalPublications = 10,
Fellowships = 2,
MajorGrants = 1,
ClassesTaught = 0)
predictions <- posterior_predict(bayes_model, newdata = new_values_data)
mean(predictions[,1])
predictions_prob <- fitted(bayes_model, newdata = new_values_data)
View(predictions_prob)
predictions <- posterior_predict(bayes_model, newdata = new_values_data)
mean(predictions[,1])
hist(predictions)
new_values_data <- data.frame(Applications = 150,
YearsSincePhD = 5,
CurrentPosition = "Postdoc",
Gender = "Male",
FirstAuthorPubs = 7,
TotalPublications = 10,
Fellowships = 2,
MajorGrants = 1,
ClassesTaught = 0)
predictions <- posterior_predict(bayes_model, newdata = new_values_data)
mean(predictions[,1])
hist(predictions)
