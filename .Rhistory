geom_point() +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_N %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Delonegha Nuclear Genome", y = "Mean fitness") +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_S %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Center Nuclear Genome", y = "Mean fitness") +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_N %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Center Nuclear Genome", y = "Mean fitness") +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness")
library(MASS)
library(aster)
library(lattice)
#library(googlesheets4)
library(tidyverse)
library(lme4)
#library(emmeans)
#library(SAGA2)
# read in data from GSheets
#Master_EcoGen <- gs_title("Master_EcoGen")
#ecoMaster <- data.frame(gs_read(Master_EcoGen, ws = 'Master'))
ecoMaster <- read.csv("G:/My Drive/Work/Projects/InProgress/2017_EcoGen/Data/ecogen_master.csv")
ecoMaster$Cross <- as.factor(ecoMaster$Cross)
ecoMaster$Genome <- as.factor(ecoMaster$Genome)
ecoMaster$Cyto <- as.factor(ecoMaster$Cyto)
ecoMaster$Site <- as.factor(ecoMaster$Site)
ecoMaster$Block <- as.factor(ecoMaster$Block)
# subset North and South dataframes for later use
ecoMaster_N <- subset(ecoMaster, Transect == "North")
ecoMaster_S <- subset(ecoMaster, Transect == "South")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness")
ecoMaster_N %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Center Nuclear Genome", y = "Mean fitness") +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_S %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "South transect", y = "Mean fitness")
ecoMaster_S %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Center Nuclear Genome", y = "Mean fitness") +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness") +
theme(legend.position = "none")
ecoMaster_S %>%
group_by(Site, Genome) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Site, y = fitness, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "South transect", y = "Mean fitness")+
theme(legend.position = "none")
ecoMaster_N %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Center Nuclear Genome", y = "Mean fitness") +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_N %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Center Nuclear Genome", y = "Mean fitness") +
theme(legend.position = "bottom") +
facet_wrap(~Site, nrow = 3, scales = "free")
ecoMaster_S %>%
group_by(Site, Genome, Nuc_PercCentral, Cyto) %>%
summarise(fitness = mean(seeds_total)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Nuc_PercCentral, y = fitness, color = Cyto)) +
geom_point() +
labs(x = "Percent Center Nuclear Genome", y = "Mean fitness") +
theme(legend.position = "bottom") +
facet_wrap(~Site, nrow = 3, scales = "free")
library(MASS)
library(aster)
library(lattice)
#library(googlesheets4)
library(tidyverse)
library(lme4)
#library(emmeans)
#library(SAGA2)
# read in data from GSheets
#Master_EcoGen <- gs_title("Master_EcoGen")
#ecoMaster <- data.frame(gs_read(Master_EcoGen, ws = 'Master'))
ecoMaster <- read.csv("G:/My Drive/Work/Projects/InProgress/2017_EcoGen/Data/ecogen_master.csv")
View(ecoMaster)
View(ecoMaster)
ecoMaster$flw_date <- as.Date(ecoMaster$First_flw, format = '%m/%d/%Y')
ecoMaster$flw_julian <- as.integer(format(ecoMaster$flw_date, '%j'))
# subset North and South dataframes for later use
ecoMaster_N <- subset(ecoMaster, Transect == "North")
ecoMaster_S <- subset(ecoMaster, Transect == "South")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness") +
theme(legend.position = "none")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "North transect", y = "Mean fitness") +
theme(legend.position = "none")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, fill = Genome)) +
geom_point() +
labs(title = "North transect", y = "Mean flowering date") +
theme(legend.position = "none")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9)) +
labs(title = "North transect", y = "Mean flowering date") +
theme(legend.position = "none")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9)) +
labs(title = "North transect", y = "Mean flowering date")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9), size = 2) +
labs(title = "North transect", y = "Mean flowering date")
ecoMaster_S %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9), size = 2) +
labs(title = "South transect", y = "Mean flowering date")
ecoMaster_S %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Site, y = flw_date, fill = Genome)) +
geom_bar(position = position_dodge(0.9), stat = "identity") +
labs(title = "South transect", y = "Mean flowering date")
ecoMaster_S %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Site, y = flw_date, fill = Genome)) +
geom_point(position = position_dodge(0.9), size = 2) +
labs(title = "South transect", y = "Mean flowering date")
ecoMaster_S %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9), size = 2) +
labs(title = "South transect", y = "Mean flowering date")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9), size = 2) +
labs(title = "North transect", y = "Mean flowering date")
ecoMaster_N %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Delonegha", "Golf Course", "Binoculars")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9), size = 2) +
labs(title = "North transect", y = "Mean flowering date")
ecoMaster_S %>%
group_by(Site, Genome) %>%
summarise(flw_date = mean(flw_julian, na.rm = T)) %>%
ungroup() %>%
mutate(Site = fct_relevel(Site, "Cow Flat", "Squirrel Mtn.", "Kelso Valley")) %>%
ggplot(aes(x = Site, y = flw_date, color = Genome)) +
geom_point(position = position_dodge(0.9), size = 2) +
labs(title = "South transect", y = "Mean flowering date")
View(ecoMaster)
library(shiny)
library(googlesheets4)
library(tidyverse)
# Set up the UI for the Shiny app:
ui <- fluidPage(
titlePanel("Google Sheet Data Visualization"),
sidebarLayout(
sidebarPanel(
helpText("Select the variables to plot against one another:"),
selectInput("x_axis", "X-axis:", choices = c("Applications", "Offers", "Gender", "Publications")),
selectInput("y_axis", "Y-axis:", choices = c("Applications", "Offers", "Gender", "Publications")),
helpText("Filter data by gender:"),
checkboxGroupInput("gender_filter", "Gender:", choices = c("Male", "Female", "Non-binary", "Other"))
),
mainPanel(plotOutput("scatter_plot"))
)
)
server <- function(input, output) {
# Replace 'YOUR_SPREADSHEET_ID' with the actual ID of your Google Sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/1cqTuSeLtH-Zw7X9ZtnhQxzw3r19Rya9nzdqRW9apTmY/edit#gid=1335543736"
data <- reactive({
sheet_data <- read_sheet(sheet_url) %>%
slice(-2) %>%
rename(
`1st_Author_Pubs` = `1st Author Pubs`,
`Senior_Author_Pubs` = `Senior Author Pubs`,
`Other_Pubs` = `Other Pubs`
) %>%
mutate(
Publications = `1st_Author_Pubs` + `Senior_Author_Pubs` + `Other_Pubs`
)
filtered_data <- sheet_data %>%
filter(Gender %in% input$gender_filter)
return(filtered_data)
})
output$scatter_plot <- renderPlot({
plot_data <- data()
ggplot(plot_data, aes_string(x = input$x_axis, y = input$y_axis)) +
geom_point() +
labs(x = input$x_axis, y = input$y_axis) +
theme_minimal()
})
}
#Run the Shiny app:
shinyApp(ui = ui, server = server)
library(shiny)
setwd("C:/Users/jwben/Documents/Shiny/")
runApp()
runApp()
runApp()
runApp()
csv_export_url <- "https://docs.google.com/spreadsheets/d/1cqTuSeLtH-Zw7X9ZtnhQxzw3r19Rya9nzdqRW9apTmY/gviz/tq?tqx=out:csv&sheet=Anon%20Quals"
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA"))
View(sheet_data)
View(sheet_data)
runApp()
runApp()
runApp()
runApp()
View(sheet_data)
runApp()
runApp()
View(sheet_data)
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
slice(-2) %>%
rename(
`Current position` = `Current Position`,
`First author pubs` = `1st Author Pubs Qualifications`,
`Senior author pubs` = `Senior Author Pubs`,
`Other pubs` = `Other Pubs (as of 2/1/2023)`,
`Applications` = `Applications Outcomes 2022-2023`
) %>%
filter(
grepl("^\\d+$", `First author pubs`),
grepl("^\\d+$", `Senior author pubs`),
grepl("^\\d+$", `Other pubs`),
grepl("^\\d+$", `Applications`),
grepl("^\\d+$", `Offers`),
grepl("^\\d+$", `Instructor of Record`),
grepl("^\\d+$", `1st / Phone Interviews`)
) %>%
mutate(
Gender = ifelse(Gender %in% c("Male", "Female"), Gender, "Other"),
`Current position` = ifelse(`Current position` %in% c("Postdoc", "Grad Student", "Visiting Asst Prof", "Asst Prof"), `Current position`, "Other"),
`Years since PhD` = 2022 - as.numeric(`PhD Year`),
`Classes taught` = as.numeric(`Instructor of Record`),
`First author pubs` = as.numeric(`First author pubs`),
`Senior author pubs` = as.numeric(`Senior author pubs`),
`Other pubs` = as.numeric(`Other pubs`),
Applications = as.numeric(Applications),
`Phone interviews` = as.numeric(`1st / Phone Interviews`),
Offers = as.numeric(Offers),
`Total publications` = `First author pubs` + `Senior author pubs` + `Other pubs`
) %>%
mutate(`Offer rate` = Offers / Applications)
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
slice(-2) %>%
rename(
`Current position` = `Current Position`,
`First author pubs` = `1st Author Pubs Qualifications`,
`Senior author pubs` = `Senior Author Pubs`,
`Other pubs` = `Other Pubs (as of 2/1/2023)`,
`Applications` = `Applications Outcomes 2022-2023`
)
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
slice(-2) %>%
rename(
`Current position` = `Current Position`,
`First author pubs` = `1st Author Pubs Qualifications`,
`Senior author pubs` = `Senior Author Pubs`,
`Other pubs` = `Other Pubs (as of 2/1/2023)`,
`Applications` = `Applications Outcomes 2022-2023`
) %>%
filter(
grepl("^\\d+$", `First author pubs`),
grepl("^\\d+$", `Senior author pubs`),
grepl("^\\d+$", `Other pubs`),
grepl("^\\d+$", `Applications`),
grepl("^\\d+$", `Offers`),
grepl("^\\d+$", `Instructor of Record`),
grepl("^\\d+$", `1st / Phone Interviews`)
)
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
slice(-2) %>%
rename(
`Current position` = `Current Position`,
`First author pubs` = `1st Author Pubs Qualifications`,
`Senior author pubs` = `Senior Author Pubs`,
`Other pubs` = `Other Pubs (as of 2/1/2023)`,
`Applications` = `Applications Outcomes 2022-2023`
) %>%
filter(
grepl("^\\d+$", `First author pubs`),
grepl("^\\d+$", `Senior author pubs`),
grepl("^\\d+$", `Other pubs`),
grepl("^\\d+$", `Applications`),
grepl("^\\d+$", `Offers`),
#grepl("^\\d+$", `Instructor of Record`),
grepl("^\\d+$", `1st / Phone Interviews`)
)
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
slice(-2) %>%
rename(
`Current position` = `Current Position`,
`First author pubs` = `1st Author Pubs Qualifications`,
`Senior author pubs` = `Senior Author Pubs`,
`Other pubs` = `Other Pubs (as of 2/1/2023)`,
`Applications` = `Applications Outcomes 2022-2023`
) %>%
filter(
grepl("^\\d+$", `First author pubs`),
grepl("^\\d+$", `Senior author pubs`),
grepl("^\\d+$", `Other pubs`),
grepl("^\\d+$", `Applications`),
grepl("^\\d+$", `Offers`)
#grepl("^\\d+$", `Instructor of Record`),
#grepl("^\\d+$", `1st / Phone Interviews`)
)
runApp()
sheet_data <- read_csv(csv_export_url, na = c("", "NULL", "NA")) %>%
slice(-2) %>%
rename(
`Current position` = `Current Position`,
`First author pubs` = `1st Author Pubs Qualifications`,
`Senior author pubs` = `Senior Author Pubs`,
`Other pubs` = `Other Pubs (as of 2/1/2023)`,
`Applications` = `Applications Outcomes 2022-2023`
)
65-13
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?selectInput
runApp()
runApp()
runApp()
runApp()
?verbatimTextOutput
runApp()
runApp()
runApp()
runApp()
?stat_smooth
runApp()
runApp()
library(rsconnect)
deployApp()
runApp()
runApp()
deployApp()
runApp()
deployApp()
